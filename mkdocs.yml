# Project Information
site_name: CTF Wiki
site_description: CTF Wiki
site_author: CTF Wiki Team
site_url: https://ctf-wiki.github.io/ctf-wiki/

# Repository
repo_name: 'ctf-wiki/ctf-wiki'
repo_url: 'https://github.com/ctf-wiki/ctf-wiki'
edit_uri: 'blob/master/docs/'

# Copyright
copyright: 'Copyright &copy; 2016 - 2018 CTF Wiki Team'

# Contents
nav:
    - Introduction:
        - Getting Started: index.md 
        - CTF History: introduction/history-zh.md
        - Introduction to CTF Competition Mode: introduction/mode-zh.md
        - CTF Contest content: introduction/content-zh.md
        - Offline attack and defense experience summary: introduction/experience-zh.md
        - CGC Super Challenge: introduction/cgc-zh.md
        - Learning resources: introduction/resources-zh.md

    - Misc:
        - Miscellaneous introduction: misc/introduction-zh.md
        - Information gathering technology: misc/recon-zh.md
        - Code analysis:
            - Commonly used coding in the communication field: misc/encode/communication-zh.md
            - Computer related code: misc/encode/computer-zh.md
            - Commonly used encodings in the real world: misc/encode/modern-zh.md
        - Forensic steganography: misc/prefix-zh.md
        - Image analysis:
            - Introduction to image analysis: misc/picture/introduction-zh.md
            - PNG: misc/picture/png-zh.md 
            - JPG: misc/picture/jpg-zh.md 
            - GIF: misc/picture/gif-zh.md 
        - Traffic packet analysis:
            - Introduction to traffic packet analysis: misc/traffic/introduction-zh.md
            - PCAP file repair: misc/traffic/fix-zh.md
            - Protocol analysis:
                - Overview of protocol analysis: misc/traffic/protocols/README-zh.md
                - Wireshark: misc/traffic/protocols/Wireshark-zh.md 
                - HTTP: misc/traffic/protocols/HTTP-zh.md 
                - HTTPS: misc/traffic/protocols/HTTPS-zh.md 
                - FTP: misc/traffic/protocols/FTP-zh.md 
                - DNS: misc/traffic/protocols/DNS-zh.md 
                - WIFI: misc/traffic/protocols/WIFI-zh.md 
                - USB: misc/traffic/protocols/USB-zh.md 
            - Data extraction: misc/traffic/data-zh.md
        - Compressed package analysis:
            - ZIP format: misc/archive/zip-zh.md
            - RAR format: misc/archive/rar-zh.md
        - Audio steganography: misc/audio/introduction-zh.md
        - Disk memory analysis:
            - Introduction: misc/disk-memory/introduction-zh.md
            - Title: misc/disk-memory/problem-zh.md
        - Other:
            - pyc file: misc/other/pyc-zh.md
    - Crypto:
        - Introduction to cryptography: crypto/introduction-zh.md
        - Basic mathematics knowledge:
            - Introduction: crypto/basic/introduction-zh.md
        - Classical password:
            - Introduction to classical passwords: crypto/classical/introduction-zh.md
            - Single table substitution encryption: crypto/classical/monoalphabetic-zh.md
            - Multi-table substitution encryption: crypto/classical/polyalphabetic-zh.md
            - Other types of encryption: crypto/classical/others-zh.md
            - Summary: crypto/classical/summary-zh.md
        - Stream password:
            - Introduction: crypto/streamcipher/intro-zh.md
            - Pseudo random number generator:
                - Introduction: crypto/streamcipher/prng/intro-zh.md
                - Cryptographic security pseudo-random number generator: crypto/streamcipher/prng/csprng-zh.md
                - Problem: crypto/streamcipher/prng/problem-zh.md 
            - Linear Congruence Generator:
                - Introduction: crypto/streamcipher/lcg/intro-zh.md
                - Example: crypto/streamcipher/lcg/challenge-zh.md
            - Feedback Shift Register:
                - Introduction: crypto/streamcipher/fsr/intro-zh.md
                - Linear feedback shift register: crypto/streamcipher/fsr/lfsr-zh.md
                - Nonlinear feedback shift register: crypto/streamcipher/fsr/nfsr-zh.md
            - Special stream password:
                - RC4: crypto/streamcipher/special/rc4-zh.md 
        - Block encryption:
            - Introduction to block encryption: crypto/blockcipher/introduction-zh.md
            - ARX: crypto/blockcipher/arx-operations-zh.md 
            - DES: crypto / blockcipher / des-zh.md
            - IDEA: crypto/blockcipher/idea-zh.md 
            - AES: crypto/blockcipher/aes-zh.md 
            - Simon and Speck: crypto/blockcipher/simon-speck-zh.md 
            - Group mode:
                - Introduction: crypto/blockcipher/mode/introduction-zh.md
                - Filling method: crypto/blockcipher/mode/padding-zh.md
                - ECB: crypto/blockcipher/mode/ecb-zh.md 
                - CBC: crypto/blockcipher/mode/cbc-zh.md 
                - PCBC: crypto/blockcipher/mode/pcbc-zh.md 
                - CFB: crypto/blockcipher/mode/cfb-zh.md 
                - OFB: crypto / blockcipher / mode / ofb-zh.md
                - CTR: crypto/blockcipher/mode/ctr-zh.md
                - Padding Oracle Attack: crypto/blockcipher/mode/padding-oracle-attack-zh.md 
            - Asymmetric encryption:
                - Introduction to asymmetric encryption: crypto/asymmetric/introduction-zh.md
                - RSA:
                    - RSA Basic introduction: crypto/asymmetric/rsa/rsa_theory-zh.md
                    - Modulo-related attacks: crypto/asymmetric/rsa/rsa_module_attack-zh.md
                    - Public key index related attacks: crypto/asymmetric/rsa/rsa_e_attack-zh.md
                    - Private key d Related attacks: crypto/asymmetric/rsa/rsa_d_attack-zh.md
                    - Coppersmith related attacks: crypto/asymmetric/rsa/rsa_coppersmith_attack-zh.md
                    - Select a clear ciphertext attack: crypto/asymmetric/rsa/rsa_chosen_plain_cipher-zh.md
                    - Side channel attack: crypto/asymmetric/rsa/rsa_side_channel-zh.md
                    - Bleichenbacher attack: crypto/asymmetric/rsa/rsa_pkcs_attack-zh.md
                    - Synthesis: crypto/asymmetric/rsa/rsa_complex-zh.md
                - Knapsack encryption: crypto/asymmetric/knapsack/knapsack-zh.md
                - Discrete log correlation:
                    - Discrete logarithm: crypto/asymmetric/discrete-log/discrete-log-zh.md
                    - Elgamal: crypto/asymmetric/discrete-log/elgamal-zh.md 
                    - ECC: crypto/asymmetric/discrete-log/ecc-zh.md

                - Password:
                    - Lattice overview: crypto/asymmetric/lattice/overview-zh.md
                    - Introduction to Lattices: crypto/asymmetric/lattice/introduction-zh.md
                    - Lattice-based algorithm: crypto/asymmetric/lattice/lattice-reduction-zh.md
                    - CVP: crypto / asymmetric / lattice / cvp-zh.md
            - Hash function:
                - Introduction to the hash function: crypto/hash/introduction-zh.md
                - MD5: crypto/hash/md5-zh.md 
                - SHA1: crypto/hash/sha1-zh.md
                - FNV: crypto/hash/fnv-zh.md 
                - Hash Attack: crypto/hash/attack-zh.md 
                - Synthesis: crypto/hash/complex-zh.md
            - digital signature:
                - Introduction to digital signatures: crypto/signature/introduction-zh.md
                - RSA digital signature: crypto/signature/rsa-zh.md
                - ElGamal digital signature: crypto/signature/elgamal-zh.md
                - DSA digital signature: crypto/signature/dsa-zh.md
            - Summary of attack ideas:
                - Introduction: crypto/attack-summary/attack-mode-zh.md
                - Intermediate encounter attack: crypto/attack-summary/meet-in-the-middle-zh.md
                - Bit attack: crypto/attack-summary/bit-attack-zh.md
            - Certificate format: crypto/certificate/introduction-zh.md
    - Web:
        - Introduction to Web Applications: web/introduction-zh.md
        - SQL injection: web/sqli-zh.md
        - XSS cross-site scripting attack: web/xss-zh.md
        - CSRF cross-site request forgery: web/csrf-zh.md
        - SSRF server request forgery: web/ssrf-zh.md
        - PHP code auditing: web/php/php-zh.md
    - Assembly:
        - x86_x64: assembly/x86-x64/readme-zh.md 
        - mips: assembly/mips/readme-zh.md 
        - arm: assembly/arm/readme-zh.md 
    - Executable: 
        - ELF file:
            - ELF file basic structure: executable/elf/elf-structure-zh.md
            - Program loading: executable/elf/program-loading-zh.md
            - Program link: executable/elf/program-linking-zh.md
            - Program execution flow: executable/elf/running-overview-zh.md
    - Reverse:
        - Reverse Overview:
            - Software Reverse Engineering Introduction: reverse/introduction-zh.md
            - Common encryption algorithms and code recognition: reverse/Identify-Encode-Encryption/introduction-zh.md
            - Labyrinth problem: reverse/maze/maze-zh.md
            - Virtual machine command analysis: reverse/vm/vm-zh.md
            - Unicorn Engine 简介: reverse/unicorn/introduction-zh.md 
        - Linux Reverse:
            - Linux Reverse Technology:
                - LD_PRELOAD: reverse/linux/ld_preload-zh.md 
                - False Disassembly: reverse/linux/false-disasm-zh.md 
                - Detecting Breakpoints: reverse/linux/detect-bp-zh.md 
                - Detecting debugging: reverse/linux/detect-dbg-zh.md 
        - Windows Reverse: 
            - Shelling technology:
                - Introduction to the protective case: reverse/windows/unpack/packer-introduction-zh.md
                - Single step tracking method: reverse/windows/unpack/trace-zh.md
                - ESP law: reverse/windows/unpack/esp-zh.md
                - One step to the OEP method: reverse/windows/unpack/direct-oep-zh.md
                - Memory mirroring method: reverse/windows/unpack/memory-zh.md
                - Last exception method: reverse/windows/unpack/last-exception-zh.md
                - SFX method: reverse/windows/unpack/sfx-zh.md
                - DUMP and IAT reconstruction: reverse/windows/unpack/fix-iat-zh.md
                - Manually find the IAT and rebuild it using ImportREC: reverse/windows/unpack/manually-fix-iat-zh.md
                - DLL file unpacking: reverse/windows/unpack/unpack-dll-zh.md
            - Anti-debugging technology:
                - NtGlobalFlag: reverse/windows/anti-debug/ntglobalflag-zh.md 
                - Heap Flags: reverse/windows/anti-debug/heap-flags-zh.md 
                - The Heap: reverse/windows/anti-debug/the-heap-zh.md 
                - Interrupt 3: reverse/windows/anti-debug/int-3-zh.md 
                - IsDebuggerPresent: reverse/windows/anti-debug/isdebuggerpresent-zh.md 
                - CheckRemoteDebuggerPresent: reverse/windows/anti-debug/checkremotedebuggerpresent-zh.md 
                - NtQueryInformationProcess: reverse/windows/anti-debug/ntqueryinformationprocess-zh.md 
                - Flower command: reverse/windows/anti-debug/junk-code-zh.md
                - Anti-debug technical example: reverse/windows/anti-debug/example-zh.md
    - Pwn:
        - Pwn Overview:
            - pwn/readme-zh.md 
        - Linux Pwn:
            - Security protection mechanism:
                - canary: pwn/linux/mitigation/canary-zh.md 
            - Stack overflow:
                - Stack introduction: pwn/linux/stackoverflow/stack-intro-zh.md
                - Stack overflow principle: pwn/linux/stackoverflow/stackoverflow-basic-zh.md
                - Basic ROP: pwn/linux/stackoverflow/basic-rop-zh.md 
                - Intermediate ROP: pwn/linux/stackoverflow/medium-rop-zh.md
                - Advanced ROP: pwn/linux/stackoverflow/advanced-rop-zh.md
                - Fancy stack overflow: pwn/linux/stackoverflow/fancy-rop-zh.md
            - Format string vulnerability:
                - Format string vulnerability principle: pwn/linux/fmtstr/fmtstr_intro-zh.md
                - Format string exploit: pwn/linux/fmtstr/fmtstr_exploit-zh.md
                - Format string vulnerability example: pwn/linux/fmtstr/fmtstr_example-zh.md
                - Format string vulnerability detection: pwn/linux/fmtstr/fmtstr_detect-zh.md
            - Glibc Heap uses:
                - Introduction to heap utilization: pwn/linux/glibc-heap/introduction-zh.md
                - Heap overview: pwn/linux/glibc-heap/heap_overview-zh.md
                - Heap related data structure: pwn/linux/glibc-heap/heap_structure-zh.md
                - In-depth understanding of Ptmalloc2:
                    - Implementation: pwn/linux/glibc-heap/implementation/overview-zh.md 
                    - Basic functions in the heap: pwn/linux/glibc-heap/implementation/basic-zh.md
                    - Heap initialization: pwn/linux/glibc-heap/implementation/heap-init-zh.md
                    - Apply heap memory: pwn/linux/glibc-heap/implementation/malloc-zh.md
                    - Free heap memory: pwn/linux/glibc-heap/implementation/free-zh.md
                    - Tcache: pwn/linux/glibc-heap/implementation/tcache-zh.md
                    - malloc_state: pwn/linux/glibc-heap/implementation/malloc_state-zh.md 
                    - Other: pwn/linux/glibc-heap/implementation/misc-zh.md 
                - Heap overflow: pwn/linux/glibc-heap/heapoverflow_basic-zh.md
                - Off-By-One in the heap: pwn/linux/glibc-heap/off_by_one-zh.md
                - Chunk Extend / Overlapping: pwn/linux/glibc-heap/chunk_extend_overlapping-zh.md 
                - Unlink: pwn/linux/glibc-heap/unlink-zh.md
                - Use After Free: pwn/linux/glibc-heap/use_after_free-zh.md
                - Fastbin Attack: pwn/linux/glibc-heap/fastbin_attack-zh.md
                - Unsorted Bin Attack: pwn/linux/glibc-heap/unsorted_bin_attack-zh.md
                - Large Bin Attack: pwn/linux/glibc-heap/large_bin_attack-zh.md
                - Tcache Attack: pwn/linux/glibc-heap/tcache_attack-zh.md
                - House Of Einherjar: pwn/linux/glibc-heap/house_of_einherjar-zh.md
                - House Of Force: pwn/linux/glibc-heap/house_of_force-zh.md
                - House of Lore: pwn/linux/glibc-heap/house_of_lore-zh.md
                - House of Orange: pwn/linux/glibc-heap/house_of_orange-zh.md
                - House of Rabbit: pwn/linux/glibc-heap/house_of_rabbit-zh.md
                - House of Roman: pwn/linux/glibc-heap/house_of_roman-zh.md 
            - IO_FILE uses:
                - FILE file structure description: pwn/linux/io_file/introduction-zh.md
                - Forged vtable hijacker process: pwn/linux/io_file/fake-vtable-exploit-zh.md
                - FSOP: pwn / linux / io_file / fsop-zh.md
                - Use of IO_FILE under glibc 2.24: pwn/linux/io_file/exploit-in-libc2.24-zh.md
            - Conditional competition:
                - Conditional competition introduction: pwn/linux/race-condition/introduction-zh.md
                - Example: pwn/linux/race-condition/problem-zh.md
            - Integer overflow:
                - Introduction to the principle of integer overflow: pwn/linux/integeroverflow/intof-zh.md
            - Sandbox escape:
                - Python sandbox escape: pwn/linux/sandbox/python-sandbox-escape-zh.md
            - kernel: 
                - Environment setup: pwn/linux/kernel/environment-zh.md
                - Basics: pwn/linux/kernel/basic_knowledge-zh.md
                - kernel-UAF: pwn/linux/kernel/kernel_uaf-zh.md
                - kernel-ROP: pwn/linux/kernel/kernel_rop-zh.md
                - ret2usr: pwn/linux/kernel/ret2usr-zh.md
                - bypass-smep: pwn/linux/kernel/bypass_smep-zh.md
                - Double Fetch: pwn/linux/kernel/double-fetch-zh.md
            - arm-pwn:
                - Environment setup: pwn/linux/arm/environment-zh.md
                - arm-rop: pwn/linux/arm/arm_rop-zh.md
            - Summary:
                - Get address: pwn/linux/summary/get-address-zh.md
                - Control program execution flow: pwn/linux/summary/hijack-control-flow-zh.md
                - get shell: pwn/linux/summary/get-shell-zh.md

        - Windows Pwn:
            - Overview: pwn/windows/readme-zh.md
            - Stack overflow:
                - Stack introduction: pwn/windows/stackoverflow/stack-introduce-zh.md
                - Stack overflow principle: pwn/windows/stackoverflow/stackoverflow-basic-zh.md
                - shellcode-in-stack: pwn/windows/stackoverflow/shellcode-in-stack-zh.md
    
    - Android:
        - Android development basics: android/basic_develop/basic_develop-zh.md
        - Android operating mechanism brief:
            - Basics: android/basic_operating_mechanism/readme-zh.md 
            - The operating mechanism of the Java layer in Android: 
                - Andriod Native: android/basic_operating_mechanism/java_layer/readme-zh.md 
                - Smali 介绍: android/basic_operating_mechanism/java_layer/smali/smali-zh.md 
                - Dex &amp;&amp; ODEX:
                    - DEX: android/basic_operating_mechanism/java_layer/dex/dex-zh.md 
                    - ODEX: android/basic_operating_mechanism/java_layer/dex/odex-zh.md 
            - Android Native layer introduction:
                - Android So: android/basic_operating_mechanism/native_layer/so-zh.md

            - Android reverse basic introduction:
                - Brief description: android/basic_reverse/overview-zh.md
                - Android key code targeting: android/basic_reverse/android_code_location-zh.md
                - Android simple static analysis:
                    - Android Java layer static analysis: android/basic_reverse/static/java-example-zh.md
                    - Android Native layer static analysis: android/basic_reverse/static/so-example-zh.md
                    - Android static analysis hybrid example: android/basic_reverse/static/complex-example-zh.md
                - Android simple dynamic analysis:
                    - Dynamic Debugging: android/basic_reverse/dynamic/dynamic_debug-zh.md
                    - Android Dynamic Debugging So: android/basic_reverse/dynamic/ida_native_debug-zh.md
    - ICS:
        - ICS_CTF Contest: ics/ctfs-zh.md
        - ICS_CTF found: ics/discover-zh.md
        - ICS_CTF uses: ics/exploit-zh.md
        - ICS_CTF Learning Resources: ics/learn-zh.md


# Theme
theme:
  name: 'material'
  language: 'zh'
  palette:
    primary: 'white'
    accent: 'red'
  logo:
    icon: 'school'
  feature:
    tabs: true 
  font:
    text: 'Noto Sans'
    code: 'Source Code Pro'

# Customization
extra:
  search:
    language: 'jp'
  disqus: 'ctf-wiki'
  copyright: 'CC BY-NC-SA 4.0'

extra_javascript:
    - 'https://cdnjs.loli.net/ajax/libs/pangu/3.3.0/pangu.min.js'
    - '_static/js/extra.js'
    - 'https://cdnjs.loli.net/ajax/libs/mathjax/2.7.2/MathJax.js?config=TeX-MML-AM_CHTML'

extra_css:
    - '_static/css/extra.css'

# Extensions
markdown_extensions:
    - admonition
    - codehilite:
        guess_lang: false 
    - def_list 
    - footnotes 
    - meta
    - toc:
        permalink: true
    - pymdownx.arithmatex
    - pymdownx.caret
    - pymdownx.critic
    - pymdownx.details
    - pymdownx.emoji:
        emoji_generator: !!python/name:pymdownx.emoji.to_svg
    - pymdownx.inlinehilite
    - pymdownx.keys
    - pymdownx.magiclink
    - pymdownx.mark
    - pymdownx.smartsymbols
    - pymdownx.superfences
    - pymdownx.tasklist:
        custom_checkbox: true
    - pymdownx.tilde
